{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/chart.js/src/helpers/helpers.core.ts","/turbopack/[project]/node_modules/chart.js/src/helpers/helpers.math.ts","/turbopack/[project]/node_modules/chart.js/src/helpers/helpers.collection.ts","/turbopack/[project]/node_modules/chart.js/src/helpers/helpers.extras.ts","/turbopack/[project]/node_modules/chart.js/src/helpers/helpers.easing.ts","/turbopack/[project]/node_modules/chart.js/src/helpers/helpers.color.ts","/turbopack/[project]/node_modules/chart.js/src/core/core.animations.defaults.js","/turbopack/[project]/node_modules/chart.js/src/core/core.layouts.defaults.js","/turbopack/[project]/node_modules/chart.js/src/helpers/helpers.intl.ts","/turbopack/[project]/node_modules/chart.js/src/core/core.ticks.js","/turbopack/[project]/node_modules/chart.js/src/core/core.scale.defaults.js","/turbopack/[project]/node_modules/chart.js/src/core/core.defaults.js","/turbopack/[project]/node_modules/chart.js/src/helpers/helpers.canvas.ts","/turbopack/[project]/node_modules/chart.js/src/helpers/helpers.options.ts","/turbopack/[project]/node_modules/chart.js/src/helpers/helpers.config.ts","/turbopack/[project]/node_modules/chart.js/src/helpers/helpers.curve.ts","/turbopack/[project]/node_modules/chart.js/src/helpers/helpers.dom.ts","/turbopack/[project]/node_modules/chart.js/src/helpers/helpers.interpolation.ts","/turbopack/[project]/node_modules/chart.js/src/helpers/helpers.rtl.ts","/turbopack/[project]/node_modules/chart.js/src/helpers/helpers.segment.js"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","undefined","console","warn","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","_getKeyResolver","obj","resolveObjectKey","resolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","from","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","isPatternOrGradient","color","Color","getHoverColor","saturate","darken","hexString","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","to","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope","node","root","Defaults","constructor","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","weight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","j","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","w","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","rotate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","h","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","ret","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","parseInt","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","r","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","p1","p2","_steppedInterpolation","_bezierInterpolation","cp1","cp2","c","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","l","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer"],"mappings":"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"}},
    {"offset": {"line": 2857, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2862, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/chart.js/src/core/core.animator.js","/turbopack/[project]/node_modules/chart.js/src/core/core.animation.js","/turbopack/[project]/node_modules/chart.js/src/core/core.animations.js","/turbopack/[project]/node_modules/chart.js/src/core/core.datasetController.js","/turbopack/[project]/node_modules/chart.js/src/controllers/controller.bar.js","/turbopack/[project]/node_modules/chart.js/src/controllers/controller.bubble.js","/turbopack/[project]/node_modules/chart.js/src/controllers/controller.doughnut.js","/turbopack/[project]/node_modules/chart.js/src/controllers/controller.line.js","/turbopack/[project]/node_modules/chart.js/src/controllers/controller.polarArea.js","/turbopack/[project]/node_modules/chart.js/src/controllers/controller.pie.js","/turbopack/[project]/node_modules/chart.js/src/controllers/controller.radar.js","/turbopack/[project]/node_modules/chart.js/src/controllers/controller.scatter.js","/turbopack/[project]/node_modules/chart.js/src/core/core.adapters.ts","/turbopack/[project]/node_modules/chart.js/src/core/core.interaction.js","/turbopack/[project]/node_modules/chart.js/src/core/core.layouts.js","/turbopack/[project]/node_modules/chart.js/src/platform/platform.base.js","/turbopack/[project]/node_modules/chart.js/src/platform/platform.basic.js","/turbopack/[project]/node_modules/chart.js/src/platform/platform.dom.js","/turbopack/[project]/node_modules/chart.js/src/platform/index.js","/turbopack/[project]/node_modules/chart.js/src/core/core.element.ts","/turbopack/[project]/node_modules/chart.js/src/core/core.scale.autoskip.js","/turbopack/[project]/node_modules/chart.js/src/core/core.scale.js","/turbopack/[project]/node_modules/chart.js/src/core/core.typedRegistry.js","/turbopack/[project]/node_modules/chart.js/src/core/core.registry.js","/turbopack/[project]/node_modules/chart.js/src/core/core.plugins.js","/turbopack/[project]/node_modules/chart.js/src/core/core.config.js","/turbopack/[project]/node_modules/chart.js/src/core/core.controller.js","/turbopack/[project]/node_modules/chart.js/src/elements/element.arc.ts","/turbopack/[project]/node_modules/chart.js/src/elements/element.line.js","/turbopack/[project]/node_modules/chart.js/src/elements/element.point.ts","/turbopack/[project]/node_modules/chart.js/src/elements/element.bar.js","/turbopack/[project]/node_modules/chart.js/src/plugins/plugin.colors.ts","/turbopack/[project]/node_modules/chart.js/src/plugins/plugin.decimation.js","/turbopack/[project]/node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","/turbopack/[project]/node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","/turbopack/[project]/node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","/turbopack/[project]/node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","/turbopack/[project]/node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","/turbopack/[project]/node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","/turbopack/[project]/node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","/turbopack/[project]/node_modules/chart.js/src/plugins/plugin.filler/index.js","/turbopack/[project]/node_modules/chart.js/src/plugins/plugin.legend.js","/turbopack/[project]/node_modules/chart.js/src/plugins/plugin.title.js","/turbopack/[project]/node_modules/chart.js/src/plugins/plugin.subtitle.js","/turbopack/[project]/node_modules/chart.js/src/plugins/plugin.tooltip.js","/turbopack/[project]/node_modules/chart.js/src/scales/scale.category.js","/turbopack/[project]/node_modules/chart.js/src/scales/scale.linearbase.js","/turbopack/[project]/node_modules/chart.js/src/scales/scale.linear.js","/turbopack/[project]/node_modules/chart.js/src/scales/scale.logarithmic.js","/turbopack/[project]/node_modules/chart.js/src/scales/scale.radialLinear.js","/turbopack/[project]/node_modules/chart.js/src/scales/scale.time.js","/turbopack/[project]/node_modules/chart.js/src/scales/scale.timeseries.js","/turbopack/[project]/node_modules/chart.js/src/index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"],"names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","convertObjectDataToArray","data","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","Array","isStacked","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","grouped","numbers","overrides","_index_","offset","grid","_value_","beginAtZero","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","currentParsed","iScaleValue","skipNull","find","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","animateRotate","animateScale","spacing","descriptors","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","merge","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","d","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","version","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","containsDefaultColorsDefenitions","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","xSet","xAverage","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","tickValue","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"mappings":"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"}},
    {"offset": {"line": 14326, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}